Java is statically typed langauge. Means type of variable is known at compile time.

Prmitive Types:
1.Boolean : 1 bit : 0/1
2.Byte : 1 byte(8 bits) : -128 to 127
    byte a = 127;
    a++;
    Ans. will be -128 as its an overflow.
3.Int : 32 bits
4.Float : 32 bits
5.Long : 64 bits
6.Double : 64 bits
7.char : 16 bits 

Enum:
    enum Color 
    { 
        RED, GREEN, BLUE; 
    } 
    
    public class Test 
    { 
        // Driver method 
        public static void main(String[] args) 
        { 
            Color c1 = Color.RED; 
            System.out.println(c1); 
        } 
    }

    /* internally above enum Color is converted to
    class Color
    {
        public static final Color RED = new Color();
        public static final Color BLUE = new Color();
        public static final Color GREEN = new Color();
    }*/

Modifier      Package  Subclass  World

public          Yes      Yes     Yes

protected       Yes      Yes     No

Default (no
modifier)       Yes       No     No

private         No        No     No


final as Immutable
    If we have more than one constructors or overloaded constructor in class, then blank final variable must be initialized in all of them. However constructor chaining can be used to initialize the blank final variable.

Widening or Automatic Conversion:
    Byte -> Short -> Int -> Long -> Float -> Double

We can static method with null reference but cant call non-static methods with null reference as object is not defined(having null reference)

Exceptions:
    Hierarchy:
        Throwable
            Exceptions 
                Checked Exception : IO and Compile time
                UnChecked Exception : NUll pointer Exception and Runtime Exception
            Error
                Virtual Machine Error
                Assertion Error

3 ways to print exception message:
    1.e.printStackTrace()
    2.e.toString()
    3.e.getMessage()

For Interfaces, methods are always public and variables are always public static final.

Java prohrams cant have non-public member interface.

Nested Classes:
    
    Static Nested Classes
    
    Inner Classes(Non-static nested classes)
        Local Classes
        Anonymous Classes

Enumerations:
    1.Enumeration is for legacy classes(Vector, Hashtable) only. Hence it is not a universal iterator.
    2.Remove operations can’t be performed using Enumeration.
    3.Only forward direction iterating is possible.

In for-each loop, we can’t modify collection, it will throw a ConcurrentModificationException on the other hand with iterator we can modify collection.

Methods to prevent Thread Excecution:
    1.yield() basically means that the thread is not doing anything particularly important and if any other threads or processes need to be run, they should run. Otherwise, the current thread will continue to run.
    2.sleep(): This method causes the currently executing thread to sleep for the specified     number of milliseconds, subject to the precision and accuracy of system timers and schedulers.
    3.If join() is called on a Thread instance, the currently running thread will block until the Thread instance has finished executing.